{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","role","placeholder","onClick","togglemode","htmlFor","TextForm","useState","text","setText","style","color","value","onChange","event","target","rows","resize","newtext","toUpperCase","showalert","toLowerCase","selectedtext","document","getElementById","focus","select","navigator","clipboard","writeText","split","join","length","Alert","word","alert","class","slice","msg","defaultProps","App","setmode","setalert","message","setTimeout","body","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2ab4b932.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul className=\"navbar-nav mr-auto\">\r\n      <li className=\"nav-item active\">\r\n        <a className=\"nav-link\" href=\"#\">Home <span className=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        {/* <Link className=\"nav-link\" to=\"/About\">About</Link> */}\r\n      </li>\r\n      <li className=\"nav-item dropdown\">\r\n        <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          Dropdown\r\n        </a>\r\n        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n          <a className=\"dropdown-item\" href=\"/\">Action</a>\r\n          <a className=\"dropdown-item\" href=\"/\">Another action</a>\r\n          <div className=\"dropdown-divider\"></div>\r\n          <a className=\"dropdown-item\" href=\"/\">Something else here</a>\r\n        </div>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a className=\"nav-link disabled\" href=\"/\">Disabled</a>\r\n      </li>\r\n    </ul>\r\n    <form className=\"form-inline my-2 my-lg-0\">\r\n      <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n      <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n    </form>\r\n    <div className={`form-check form-switch mx-3 text-${props.mode===\"dark\"?\"light\":\"dark\"}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick={props.togglemode}/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" >Enable Dark Mode</label>\r\n</div>\r\n  </div>\r\n</nav>\r\n    );\r\n}\r\nNavbar.propTypes={\r\n    title:PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps={\r\n    title: \"blog\"\r\n}","\r\nimport PropTypes from 'prop-types'\r\nimport React, { useState } from 'react';\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState(\"Enter Text Here\");\r\n    const toupperc=()=>{\r\n        var newtext=text.toUpperCase();\r\n        setText(newtext);\r\n        props.showalert(\"Converted to Upper Case\",\"success\")\r\n    }\r\n    var textchange=(event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    const tolowerc=()=>{\r\n      setText(text.toLowerCase());\r\n      props.showalert(\"Converted to Lower Case\",\"success\")\r\n    }\r\n    const cleartext=()=>{\r\n      setText(\"Enter Text Here\")\r\n      props.showalert(\"All text Cleared\",\"success\")\r\n    }\r\n    const selecttext=()=>{\r\n      var selectedtext=document.getElementById(\"exampleFormControlTextarea1\");\r\n      selectedtext.focus();\r\n      selectedtext.select();\r\n      // selectedtext.setSelectionRange(0, 99999);\r\n      navigator.clipboard.writeText(selectedtext.value)\r\n      props.showalert(\"Text Copied to Clipboard\",\"success\")\r\n\r\n    }\r\n    const removeextra=()=>{\r\n      \r\n      var newtext=text.split(/[ ]+/)\r\n      setText(newtext.join(\" \"))\r\n      props.showalert(\"Extra Spaces Removes\",\"success\")\r\n    }\r\n  return (\r\n      <>\r\n      <div className=\"container\" style={{color:props.mode===\"dark\"?\"white\":\"black\"}}>\r\n          <h1>{props.title}</h1>\r\n   \r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"exampleFormControlTextarea1\" >Text</label>\r\n        <textarea\r\n        value={text}\r\n        onChange={textchange}\r\n          className=\"form-control\"\r\n          id=\"exampleFormControlTextarea1\"\r\n          rows=\"8\"\r\n          style={{resize:'none'}} \r\n        ></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary\" onClick={toupperc}>UpperCase</button>\r\n      <button className=\"btn btn-primary mx-2\" onClick={tolowerc}>LowerCase</button>\r\n      <button className=\"btn btn-primary mx-2\" onClick={selecttext}>Select</button>\r\n      <button className=\"btn btn-primary mx-2\" onClick={removeextra}>Remove Extra Scpaces</button>\r\n      <button className=\"btn btn-danger mx-2\" onClick={cleartext}>Clear</button>\r\n      \r\n      \r\n    \r\n    </div>\r\n    <div className=\"container\" style={{color:props.mode===\"dark\"?\"white\":\"black\"}}>\r\n      <h2>Summary</h2>\r\n      <p>{text.split(\" \").length} words and {text.length} Letters</p>\r\n      <p>{0.007*text.split(\" \").length} time Read</p>\r\n      <h2>Preview</h2>\r\n      <p>{text!==\"Enter Text Here\"?text:\"Enter something Above in the Textbox to preview\"}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\nTextForm.propTypes={\r\n    title:PropTypes.string.isRequired\r\n}","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capatilize=(word)=>{\r\n        word=word.toLowerCase();\r\n        return word[0].toUpperCase()+word.slice(1)\r\n\r\n    }\r\n    return (\r\n      props.alert &&  <div class={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{capatilize( props.alert.type)} : </strong> {props.alert.msg}\r\n \r\n</div>\r\n    )\r\n}\r\n","\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n  \n// } from \"react-router-dom\";\nfunction App() {\n  const [mode, setmode] = useState(\"light\")\n  const [alert, setalert] = useState(null)\n  const showalert=(message,type)=>{\n    setalert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setalert(null)\n    },3000);\n  }\n  const togglemode=()=>{\n    if(mode===\"light\"){\n      setmode(\"dark\")\n      document.body.style.backgroundColor=\"#06001b\";\n      showalert(\"Dark Mode Enable\",\"success\")\n    }\n    else{\n      setmode(\"light\")\n      document.body.style.backgroundColor=\"white\"\n    }\n\n  }\n  return (\n    <>\n     {/* <Router> */}\n     <Navbar title=\"Textutils\" mode={mode} togglemode={togglemode}></Navbar>\n  <Alert alert={alert}/>\n     {/* <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n         */}\n          {/* <Route path=\"/\"> */}\n          <TextForm title=\"Enter Text To Convert\" mode={mode} showalert={showalert}></TextForm>\n\n          {/* </Route>\n        </Switch>\n     </Router> */}\n \n  \n\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}